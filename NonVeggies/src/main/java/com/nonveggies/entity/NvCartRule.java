package com.nonveggies.entity;

// Generated Jan 2, 2016 7:30:29 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * NvCartRule generated by hbm2java
 */
@Entity
@Table(name = "nv_cart_rule", catalog = "NVPrestashop")
public class NvCartRule implements java.io.Serializable {

	private Integer idCartRule;
	private int idCustomer;
	private Date dateFrom;
	private Date dateTo;
	private String description;
	private int quantity;
	private int quantityPerUser;
	private int priority;
	private boolean partialUse;
	private String code;
	private BigDecimal minimumAmount;
	private boolean minimumAmountTax;
	private int minimumAmountCurrency;
	private boolean minimumAmountShipping;
	private boolean countryRestriction;
	private boolean carrierRestriction;
	private boolean groupRestriction;
	private boolean cartRuleRestriction;
	private boolean productRestriction;
	private boolean shopRestriction;
	private boolean freeShipping;
	private BigDecimal reductionPercent;
	private BigDecimal reductionAmount;
	private boolean reductionTax;
	private int reductionCurrency;
	private int reductionProduct;
	private int giftProduct;
	private int giftProductAttribute;
	private boolean highlight;
	private boolean active;
	private Date dateAdd;
	private Date dateUpd;

	public NvCartRule() {
	}

	public NvCartRule(int idCustomer, Date dateFrom, Date dateTo, int quantity, int quantityPerUser, int priority, boolean partialUse, String code,
					BigDecimal minimumAmount, boolean minimumAmountTax, int minimumAmountCurrency, boolean minimumAmountShipping, boolean countryRestriction,
					boolean carrierRestriction, boolean groupRestriction, boolean cartRuleRestriction, boolean productRestriction, boolean shopRestriction,
					boolean freeShipping, BigDecimal reductionPercent, BigDecimal reductionAmount, boolean reductionTax, int reductionCurrency,
					int reductionProduct, int giftProduct, int giftProductAttribute, boolean highlight, boolean active, Date dateAdd, Date dateUpd) {
		this.idCustomer = idCustomer;
		this.dateFrom = dateFrom;
		this.dateTo = dateTo;
		this.quantity = quantity;
		this.quantityPerUser = quantityPerUser;
		this.priority = priority;
		this.partialUse = partialUse;
		this.code = code;
		this.minimumAmount = minimumAmount;
		this.minimumAmountTax = minimumAmountTax;
		this.minimumAmountCurrency = minimumAmountCurrency;
		this.minimumAmountShipping = minimumAmountShipping;
		this.countryRestriction = countryRestriction;
		this.carrierRestriction = carrierRestriction;
		this.groupRestriction = groupRestriction;
		this.cartRuleRestriction = cartRuleRestriction;
		this.productRestriction = productRestriction;
		this.shopRestriction = shopRestriction;
		this.freeShipping = freeShipping;
		this.reductionPercent = reductionPercent;
		this.reductionAmount = reductionAmount;
		this.reductionTax = reductionTax;
		this.reductionCurrency = reductionCurrency;
		this.reductionProduct = reductionProduct;
		this.giftProduct = giftProduct;
		this.giftProductAttribute = giftProductAttribute;
		this.highlight = highlight;
		this.active = active;
		this.dateAdd = dateAdd;
		this.dateUpd = dateUpd;
	}

	public NvCartRule(int idCustomer, Date dateFrom, Date dateTo, String description, int quantity, int quantityPerUser, int priority, boolean partialUse,
					String code, BigDecimal minimumAmount, boolean minimumAmountTax, int minimumAmountCurrency, boolean minimumAmountShipping,
					boolean countryRestriction, boolean carrierRestriction, boolean groupRestriction, boolean cartRuleRestriction, boolean productRestriction,
					boolean shopRestriction, boolean freeShipping, BigDecimal reductionPercent, BigDecimal reductionAmount, boolean reductionTax,
					int reductionCurrency, int reductionProduct, int giftProduct, int giftProductAttribute, boolean highlight, boolean active, Date dateAdd,
					Date dateUpd) {
		this.idCustomer = idCustomer;
		this.dateFrom = dateFrom;
		this.dateTo = dateTo;
		this.description = description;
		this.quantity = quantity;
		this.quantityPerUser = quantityPerUser;
		this.priority = priority;
		this.partialUse = partialUse;
		this.code = code;
		this.minimumAmount = minimumAmount;
		this.minimumAmountTax = minimumAmountTax;
		this.minimumAmountCurrency = minimumAmountCurrency;
		this.minimumAmountShipping = minimumAmountShipping;
		this.countryRestriction = countryRestriction;
		this.carrierRestriction = carrierRestriction;
		this.groupRestriction = groupRestriction;
		this.cartRuleRestriction = cartRuleRestriction;
		this.productRestriction = productRestriction;
		this.shopRestriction = shopRestriction;
		this.freeShipping = freeShipping;
		this.reductionPercent = reductionPercent;
		this.reductionAmount = reductionAmount;
		this.reductionTax = reductionTax;
		this.reductionCurrency = reductionCurrency;
		this.reductionProduct = reductionProduct;
		this.giftProduct = giftProduct;
		this.giftProductAttribute = giftProductAttribute;
		this.highlight = highlight;
		this.active = active;
		this.dateAdd = dateAdd;
		this.dateUpd = dateUpd;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_cart_rule", unique = true, nullable = false)
	public Integer getIdCartRule() {
		return this.idCartRule;
	}

	public void setIdCartRule(Integer idCartRule) {
		this.idCartRule = idCartRule;
	}

	@Column(name = "id_customer", nullable = false)
	public int getIdCustomer() {
		return this.idCustomer;
	}

	public void setIdCustomer(int idCustomer) {
		this.idCustomer = idCustomer;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_from", nullable = false, length = 0)
	public Date getDateFrom() {
		return this.dateFrom;
	}

	public void setDateFrom(Date dateFrom) {
		this.dateFrom = dateFrom;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_to", nullable = false, length = 0)
	public Date getDateTo() {
		return this.dateTo;
	}

	public void setDateTo(Date dateTo) {
		this.dateTo = dateTo;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "quantity_per_user", nullable = false)
	public int getQuantityPerUser() {
		return this.quantityPerUser;
	}

	public void setQuantityPerUser(int quantityPerUser) {
		this.quantityPerUser = quantityPerUser;
	}

	@Column(name = "priority", nullable = false)
	public int getPriority() {
		return this.priority;
	}

	public void setPriority(int priority) {
		this.priority = priority;
	}

	@Column(name = "partial_use", nullable = false)
	public boolean isPartialUse() {
		return this.partialUse;
	}

	public void setPartialUse(boolean partialUse) {
		this.partialUse = partialUse;
	}

	@Column(name = "code", nullable = false, length = 254)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "minimum_amount", nullable = false, precision = 17)
	public BigDecimal getMinimumAmount() {
		return this.minimumAmount;
	}

	public void setMinimumAmount(BigDecimal minimumAmount) {
		this.minimumAmount = minimumAmount;
	}

	@Column(name = "minimum_amount_tax", nullable = false)
	public boolean isMinimumAmountTax() {
		return this.minimumAmountTax;
	}

	public void setMinimumAmountTax(boolean minimumAmountTax) {
		this.minimumAmountTax = minimumAmountTax;
	}

	@Column(name = "minimum_amount_currency", nullable = false)
	public int getMinimumAmountCurrency() {
		return this.minimumAmountCurrency;
	}

	public void setMinimumAmountCurrency(int minimumAmountCurrency) {
		this.minimumAmountCurrency = minimumAmountCurrency;
	}

	@Column(name = "minimum_amount_shipping", nullable = false)
	public boolean isMinimumAmountShipping() {
		return this.minimumAmountShipping;
	}

	public void setMinimumAmountShipping(boolean minimumAmountShipping) {
		this.minimumAmountShipping = minimumAmountShipping;
	}

	@Column(name = "country_restriction", nullable = false)
	public boolean isCountryRestriction() {
		return this.countryRestriction;
	}

	public void setCountryRestriction(boolean countryRestriction) {
		this.countryRestriction = countryRestriction;
	}

	@Column(name = "carrier_restriction", nullable = false)
	public boolean isCarrierRestriction() {
		return this.carrierRestriction;
	}

	public void setCarrierRestriction(boolean carrierRestriction) {
		this.carrierRestriction = carrierRestriction;
	}

	@Column(name = "group_restriction", nullable = false)
	public boolean isGroupRestriction() {
		return this.groupRestriction;
	}

	public void setGroupRestriction(boolean groupRestriction) {
		this.groupRestriction = groupRestriction;
	}

	@Column(name = "cart_rule_restriction", nullable = false)
	public boolean isCartRuleRestriction() {
		return this.cartRuleRestriction;
	}

	public void setCartRuleRestriction(boolean cartRuleRestriction) {
		this.cartRuleRestriction = cartRuleRestriction;
	}

	@Column(name = "product_restriction", nullable = false)
	public boolean isProductRestriction() {
		return this.productRestriction;
	}

	public void setProductRestriction(boolean productRestriction) {
		this.productRestriction = productRestriction;
	}

	@Column(name = "shop_restriction", nullable = false)
	public boolean isShopRestriction() {
		return this.shopRestriction;
	}

	public void setShopRestriction(boolean shopRestriction) {
		this.shopRestriction = shopRestriction;
	}

	@Column(name = "free_shipping", nullable = false)
	public boolean isFreeShipping() {
		return this.freeShipping;
	}

	public void setFreeShipping(boolean freeShipping) {
		this.freeShipping = freeShipping;
	}

	@Column(name = "reduction_percent", nullable = false, precision = 5)
	public BigDecimal getReductionPercent() {
		return this.reductionPercent;
	}

	public void setReductionPercent(BigDecimal reductionPercent) {
		this.reductionPercent = reductionPercent;
	}

	@Column(name = "reduction_amount", nullable = false, precision = 17)
	public BigDecimal getReductionAmount() {
		return this.reductionAmount;
	}

	public void setReductionAmount(BigDecimal reductionAmount) {
		this.reductionAmount = reductionAmount;
	}

	@Column(name = "reduction_tax", nullable = false)
	public boolean isReductionTax() {
		return this.reductionTax;
	}

	public void setReductionTax(boolean reductionTax) {
		this.reductionTax = reductionTax;
	}

	@Column(name = "reduction_currency", nullable = false)
	public int getReductionCurrency() {
		return this.reductionCurrency;
	}

	public void setReductionCurrency(int reductionCurrency) {
		this.reductionCurrency = reductionCurrency;
	}

	@Column(name = "reduction_product", nullable = false)
	public int getReductionProduct() {
		return this.reductionProduct;
	}

	public void setReductionProduct(int reductionProduct) {
		this.reductionProduct = reductionProduct;
	}

	@Column(name = "gift_product", nullable = false)
	public int getGiftProduct() {
		return this.giftProduct;
	}

	public void setGiftProduct(int giftProduct) {
		this.giftProduct = giftProduct;
	}

	@Column(name = "gift_product_attribute", nullable = false)
	public int getGiftProductAttribute() {
		return this.giftProductAttribute;
	}

	public void setGiftProductAttribute(int giftProductAttribute) {
		this.giftProductAttribute = giftProductAttribute;
	}

	@Column(name = "highlight", nullable = false)
	public boolean isHighlight() {
		return this.highlight;
	}

	public void setHighlight(boolean highlight) {
		this.highlight = highlight;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_add", nullable = false, length = 0)
	public Date getDateAdd() {
		return this.dateAdd;
	}

	public void setDateAdd(Date dateAdd) {
		this.dateAdd = dateAdd;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_upd", nullable = false, length = 0)
	public Date getDateUpd() {
		return this.dateUpd;
	}

	public void setDateUpd(Date dateUpd) {
		this.dateUpd = dateUpd;
	}

}
