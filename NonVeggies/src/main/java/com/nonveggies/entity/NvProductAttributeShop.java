package com.nonveggies.entity;

// Generated Jan 2, 2016 7:30:29 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * NvProductAttributeShop generated by hbm2java
 */
@Entity
@Table(name = "nv_product_attribute_shop", catalog = "NVPrestashop", uniqueConstraints = @UniqueConstraint(columnNames = { "id_product", "id_shop",
		"default_on" }))
public class NvProductAttributeShop implements java.io.Serializable {

	private NvProductAttributeShopId id;
	private int idProduct;
	private BigDecimal wholesalePrice;
	private BigDecimal price;
	private BigDecimal ecotax;
	private BigDecimal weight;
	private BigDecimal unitPriceImpact;
	private Boolean defaultOn;
	private int minimalQuantity;
	private Date availableDate;

	public NvProductAttributeShop() {
	}

	public NvProductAttributeShop(NvProductAttributeShopId id, int idProduct, BigDecimal wholesalePrice, BigDecimal price, BigDecimal ecotax,
					BigDecimal weight, BigDecimal unitPriceImpact, int minimalQuantity, Date availableDate) {
		this.id = id;
		this.idProduct = idProduct;
		this.wholesalePrice = wholesalePrice;
		this.price = price;
		this.ecotax = ecotax;
		this.weight = weight;
		this.unitPriceImpact = unitPriceImpact;
		this.minimalQuantity = minimalQuantity;
		this.availableDate = availableDate;
	}

	public NvProductAttributeShop(NvProductAttributeShopId id, int idProduct, BigDecimal wholesalePrice, BigDecimal price, BigDecimal ecotax,
					BigDecimal weight, BigDecimal unitPriceImpact, Boolean defaultOn, int minimalQuantity, Date availableDate) {
		this.id = id;
		this.idProduct = idProduct;
		this.wholesalePrice = wholesalePrice;
		this.price = price;
		this.ecotax = ecotax;
		this.weight = weight;
		this.unitPriceImpact = unitPriceImpact;
		this.defaultOn = defaultOn;
		this.minimalQuantity = minimalQuantity;
		this.availableDate = availableDate;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "idProductAttribute", column = @Column(name = "id_product_attribute", nullable = false)),
			@AttributeOverride(name = "idShop", column = @Column(name = "id_shop", nullable = false)) })
	public NvProductAttributeShopId getId() {
		return this.id;
	}

	public void setId(NvProductAttributeShopId id) {
		this.id = id;
	}

	@Column(name = "id_product", nullable = false)
	public int getIdProduct() {
		return this.idProduct;
	}

	public void setIdProduct(int idProduct) {
		this.idProduct = idProduct;
	}

	@Column(name = "wholesale_price", nullable = false, precision = 20, scale = 6)
	public BigDecimal getWholesalePrice() {
		return this.wholesalePrice;
	}

	public void setWholesalePrice(BigDecimal wholesalePrice) {
		this.wholesalePrice = wholesalePrice;
	}

	@Column(name = "price", nullable = false, precision = 20, scale = 6)
	public BigDecimal getPrice() {
		return this.price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	@Column(name = "ecotax", nullable = false, precision = 17, scale = 6)
	public BigDecimal getEcotax() {
		return this.ecotax;
	}

	public void setEcotax(BigDecimal ecotax) {
		this.ecotax = ecotax;
	}

	@Column(name = "weight", nullable = false, precision = 20, scale = 6)
	public BigDecimal getWeight() {
		return this.weight;
	}

	public void setWeight(BigDecimal weight) {
		this.weight = weight;
	}

	@Column(name = "unit_price_impact", nullable = false, precision = 20, scale = 6)
	public BigDecimal getUnitPriceImpact() {
		return this.unitPriceImpact;
	}

	public void setUnitPriceImpact(BigDecimal unitPriceImpact) {
		this.unitPriceImpact = unitPriceImpact;
	}

	@Column(name = "default_on")
	public Boolean getDefaultOn() {
		return this.defaultOn;
	}

	public void setDefaultOn(Boolean defaultOn) {
		this.defaultOn = defaultOn;
	}

	@Column(name = "minimal_quantity", nullable = false)
	public int getMinimalQuantity() {
		return this.minimalQuantity;
	}

	public void setMinimalQuantity(int minimalQuantity) {
		this.minimalQuantity = minimalQuantity;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "available_date", nullable = false, length = 0)
	public Date getAvailableDate() {
		return this.availableDate;
	}

	public void setAvailableDate(Date availableDate) {
		this.availableDate = availableDate;
	}

}
